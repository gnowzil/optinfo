
* Git

** Clone git repo
#+BEGIN_SRC
git clone <repo_address>
#+END_SRC

** State of local repository
#+BEGIN_SRC
git status
#+END_SRC

** Add (stage) files for next commit:
#+BEGIN_SRC
git add <file>
git add <directory>
git add .   % everything in current directory
 #+END_SRC

** Unstage files (undo add):
#+BEGIN_SRC
git restore --staged <file>
#+END_SRC

** Commit changes to repository (after staging):
#+BEGIN_SRC
git commit -m "<message>"
#+END_SRC

** Push commited changes to remote repository:
~git push~

** Updating local repository
Updates in a repository are 'fetched' from the remote repo and merged into
your local repository.  The 'fetch' command imports updates into your local
repo, but will *not* update the files.  The 'pull' command will fetch and
merge the updates into the local files of your current branch. (Usually,
you will want to use the pull command).

- Fetch all of the branches from the repository:
  ~git fetch <remote>~

- Fetch specified branch only:
  ~git fetch <remote> <branch>~

- Pull (fetch and merge): Fetches and merges changes into local repository
  (only updates the current branch you are using).
  ~git pull~

  *Note* This will only merge changes into the current branch you are
  working in.  To pull updates for other branches, you will have to switch
  (checkout) the other branch and do another git pull.

** Branches
- List all branches in repository:
  ~git branch~

- List remote branches
  ~git branch -r~

- List all (local and remote) branches
  ~git branch -a~

- Switch to a branch:
  ~git checkout <branch_name>~

- Create new branch (does not "checkout" the new branch):
  ~git branch <branch_name>~
  
- Create new branch AND check it out:
  ~git checkout -b <branch_name>~

- Rename branch:
  ~git branch -m <old_branch_name> <new_branch_name>~
 
- Pushing newly created branch to remote repo:
  ~git push -u origin <branch_name>~

- Checkout remote branch:
  ~git checkout --track origin/<branch_name>~

- Delete local git branch
  ~git branch -d <branch_name>~

- Delete remote git branch
  ~git push origin --delete <branch_name>~

- Rename the current branch to <branch>.
  ~git branch -m <branch>~

*** Merging branches:
The git merge command lets you take the independent lines of development
created by git branch and integrate them into a single branch.

- Merge the specified branch into the current branch
  ~git merge <branch>~

** Tags 
*** List tags:
#+BEGIN_SRC
git tag
git tag -l "<pattern>"
#+END_SRC

*** Create tag:
#+BEGIN_SRC
git tag -a <tagname> -m "<message>"
#+END_SRC

*** Modifying tag:

When a tag is checked out, you will enter "DETACHED HEAD" state.  If you need to modify the files in a tag (fix bugs, update files, etc.), then you will have to create a new branch to commit and push your updates:
- Checkout tag
  ~git checkout <tagname>~

- Create new branch with tag:
  ~git checkout -b <new_branch_name> <tagname>~

*** More tags:
- Pushing tags:
  ~git push origin <tagname>~
  
- Delete local tag:
  ~git tag -d <tagname>~
  
- Delete remote tag:
  ~git push origin --delete <tagname>~
  
